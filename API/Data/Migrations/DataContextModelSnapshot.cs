// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.AccDpst", b =>
                {
                    b.Property<string>("AccCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccId")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("AccStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AccTypeTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<decimal>("AvaliableAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("CustomerCustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("TransferDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<decimal>("UsableAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("AccCode");

                    b.HasIndex("AccTypeTypeCode");

                    b.HasIndex("CustomerCustCode");

                    b.ToTable("AccDpst");
                });

            modelBuilder.Entity("API.Entities.AccLoan", b =>
                {
                    b.Property<string>("AccCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccId")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("AccStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AccTypeTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("CustomerCustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<decimal>("InstallAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("MaxloanAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PrincipalAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("TransferDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<decimal>("WithdrawAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("AccCode");

                    b.HasIndex("AccTypeTypeCode");

                    b.HasIndex("CustomerCustCode");

                    b.ToTable("AccLoan");
                });

            modelBuilder.Entity("API.Entities.AccType", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeCode");

                    b.ToTable("AccType");
                });

            modelBuilder.Entity("API.Entities.Customer", b =>
                {
                    b.Property<string>("CustCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenId")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustCode");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("API.Entities.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileEBook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Doc");
                });

            modelBuilder.Entity("API.Entities.DocType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("API.Entities.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("API.Entities.TransDpst", b =>
                {
                    b.Property<string>("TransCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccDpstAccCode")
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("ApproveDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ApproveTime")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CreateTime")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("DpstAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("DpstDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Status01")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status02")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status03")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status04")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TransDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TransferDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("UsableAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("WithdrawAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("TransCode");

                    b.HasIndex("AccDpstAccCode");

                    b.ToTable("TransDpst");
                });

            modelBuilder.Entity("API.Entities.TransLoan", b =>
                {
                    b.Property<string>("TransCode")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("AccLoanAccCode")
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("ApproveDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ApproveTime")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CreateTime")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("PayinForDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("PayinInsureAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PayinInterestAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PayinPenaltyAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PayinPrincipalAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PayoutAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("PrincipalAmt")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Status01")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status02")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status03")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status04")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TransDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TransferDate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("TransCode");

                    b.HasIndex("AccLoanAccCode");

                    b.ToTable("TransLoan");
                });

            modelBuilder.Entity("API.Entities.AccDpst", b =>
                {
                    b.HasOne("API.Entities.AccType", "AccType")
                        .WithMany()
                        .HasForeignKey("AccTypeTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("API.Entities.AccLoan", b =>
                {
                    b.HasOne("API.Entities.AccType", "AccType")
                        .WithMany()
                        .HasForeignKey("AccTypeTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("API.Entities.Doc", b =>
                {
                    b.HasOne("API.Entities.DocType", "DocType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocType");
                });

            modelBuilder.Entity("API.Entities.TransDpst", b =>
                {
                    b.HasOne("API.Entities.AccDpst", "AccDpst")
                        .WithMany()
                        .HasForeignKey("AccDpstAccCode");

                    b.Navigation("AccDpst");
                });

            modelBuilder.Entity("API.Entities.TransLoan", b =>
                {
                    b.HasOne("API.Entities.AccLoan", "AccLoan")
                        .WithMany()
                        .HasForeignKey("AccLoanAccCode");

                    b.Navigation("AccLoan");
                });
#pragma warning restore 612, 618
        }
    }
}
